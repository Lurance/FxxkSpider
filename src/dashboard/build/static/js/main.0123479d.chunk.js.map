{"version":3,"sources":["create.tsx","list.tsx","nav.tsx","subscribe.tsx","index.tsx"],"names":["TaskCreate","autobind","arg","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gameName","startPage","endPage","undefined","task","selectType","cb","_this2","sto","setTimeout","runPoll","_this$state","Axios","post","then","res","data","error","alert","location","href","ev","newState","target","name","value","setState","react","style","textAlign","input","type","onChange","handleValueChange","width","es_button","onClick","handleSubmit","React","TaskList","args","dataSource","progressString","get","nowTask","status","getTaskDetail","_id","clearTimeout","poll","_this3","taskId","_this4","concat","componentDidMount","reload","resultUrl","handleExport","bind","_this5","length","map","t","i","spin","spinning","delay","card","title","desc","hoverable","Date","createdAt","toLocaleTimeString","renderStatus","timeConsuming","renderResultUrl","Nav","props","pathname","current","e","key","menu","handleClick","selectedKeys","mode","theme","Item","Link","to","icon","children","GoodsSubscribe","marketHashName","verboseName","intervals","id","delete","subscribers","totalSum","filter","v","reduce","pv","cv","medianPrice","Number","replace","substr","lowestPrice","toFixed","es_list","grid","gutter","column","renderItem","s","getGameId","encodeURI","volume","updatedAt","toLocaleString","handleDeleteSubscriber","ReactDOM","HashRouter","Switch","nav","Route","path","exact","component","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.0123479d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { autobind } from \"core-decorators\";\nimport Axios from \"axios\";\nimport { ITask } from \"../../core/model\";\nimport { Button, Input } from \"antd\";\n\n@autobind\nclass TaskCreate extends React.Component<any, { gameName: string, startPage: number, endPage: number, task: ITask, selectType: string }> {\n    public sto: any;\n    constructor(arg) {\n        super(arg);\n        this.state = {\n            gameName: \"\",\n            startPage: 1,\n            endPage: undefined,\n            task: null,\n            selectType: \"1\",\n        };\n    }\n\n    public runPoll(cb) {\n        this.sto = setTimeout(() => {\n            if (cb) {\n                cb();\n            }\n            this.runPoll(cb);\n        }, 1000);\n    }\n\n    // public getTaskDetail(taskId) {\n    //     return () => {\n    //         Axios.get<ITask>(`/api/task/${taskId}`)\n    //             .then((res) => {\n    //                 if (res.data.status === 1) {\n    //                     clearTimeout(this.sto);\n    //                     const task = res.data;\n    //                     this.setState({\n    //                         task,\n    //                     });\n    //                 }\n    //         });\n    //     };\n    // }\n\n    public handleSubmit() {\n        const { gameName, startPage, endPage } = this.state;\n        Axios.post(\"/api/task\", {\n            gameName,\n            startPage,\n            endPage,\n        })\n            .then((res) => {\n                if (res.data.error === 0) {\n                    alert(\"创建成功，请等待任务单运行\");\n                    location.href = \"/\";\n                }\n            });\n    }\n\n    public handleValueChange(ev) {\n        const newState = {};\n        newState[ev.target.name] =  ev.target.value;\n        this.setState(newState);\n    }\n\n    public render() {\n        return (\n            <section style={{ textAlign: \"center\" }}>\n                <br />\n                <form>\n                    <label>游戏名：（请输入 dota2，csgo或者pubg）</label>\n                    <Input type=\"text\" onChange={this.handleValueChange} name=\"gameName\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>开始页数：（爬取开始的页数，一般为 1，平均一页1500条数据）</label>\n                    <Input type=\"number\" onChange={this.handleValueChange} name=\"startPage\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>结束页数：（爬取结束的页数，填-1为最后一页）</label>\n                    <Input type=\"number\" onChange={this.handleValueChange} name=\"endPage\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <Button type=\"primary\" onClick={this.handleSubmit}>开始    ！</Button>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default TaskCreate;\n","import * as React from \"react\";\nimport Axios from \"axios\";\nimport { ITask } from \"../../core/model\";\nimport { autobind } from \"core-decorators\";\nimport { Card, Button, Spin } from \"antd\";\n\n@autobind\nclass TaskList extends React.Component<{}, { dataSource: ITask[], progressString: string; }> {\n    public poll: NodeJS.Timer;\n\n    constructor(args) {\n        super(args);\n        this.state = {\n            dataSource: [],\n            progressString: \"\",\n        };\n    }\n\n    public componentDidMount() {\n        Axios.get(\"/api/task\")\n            .then((res) => {\n                const nowTask = res.data[0];\n                if (nowTask.status === -1) {\n                    this.runPoll(this.getTaskDetail(nowTask._id));\n                }\n                this.setState({ dataSource: res.data });\n            });\n    }\n\n    public componentWillUnmount() {\n        clearTimeout(this.poll);\n    }\n\n    public runPoll(cb) {\n        this.poll = setTimeout(() => {\n            if (cb) {\n                cb();\n            }\n            this.runPoll(cb);\n        }, 2000);\n    }\n\n    public getTaskDetail(taskId) {\n        return () => {\n            Axios.get<ITask>(`/api/task/${taskId}`)\n                .then((res) => {\n                    if (res.data.status === 1) {\n                        clearTimeout(this.poll);\n                        this.componentDidMount();\n                        // const nowTask = res.data;\n                        // this.setState((state) => ({ dataSource: state.dataSource.splice(0, 1, nowTask) }));\n                    }\n            });\n        };\n    }\n\n    public renderStatus(status) {\n        switch (status) {\n            case -1:\n                return \"运行中\";\n            case 0:\n                return \"运行失败\";\n            case 1:\n                return \"成功！\";\n        }\n    }\n\n    public handleExport(task: ITask) {\n        Axios.get(`/api/task/${task._id}/export`)\n            .then((res) => {\n                if (res.data.error === 0) {\n                    location.reload();\n                }\n            });\n    }\n\n    public renderResultUrl(task: ITask) {\n        if (task.status === 1) {\n            if (task.resultUrl) {\n                return <p>数据下载链接：<a href={`/${task.resultUrl}`}>{task.resultUrl}</a></p>;\n            } else {\n                return <p><Button type=\"primary\" onClick={this.handleExport.bind(this, task)}>导出数据</Button></p>;\n            }\n        }\n    }\n\n    public render() {\n        const { dataSource, progressString } = this.state;\n        return (\n            <section>\n                <br />\n                {dataSource.length > 0 ? dataSource.map((t, i) => (\n                    <section>\n                        <Spin spinning={t.status !== 1} delay={300}>\n                            <Card title={t.desc} hoverable={true}>\n                                <p>创建时间：{new Date(t.createdAt).toLocaleTimeString()}</p>\n                                <p>状态：{this.renderStatus(t.status)}{i === 0 ? progressString : null}</p>\n                                {t.status === 1 ? <p>耗时：{t.timeConsuming}</p> : null}\n                                {this.renderResultUrl(t)}\n                            </Card>\n                        </Spin>\n                        <br />\n                        <br />\n                    </section>\n                )) : \"还没有任务单或者任务单已经过期自动删除，点击右上方去创建！\"}\n            </section>\n        );\n    }\n}\n\nexport default TaskList;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon } from \"antd\";\nimport { autobind } from \"core-decorators\";\nimport * as H from \"history\";\n\n@autobind\nclass Nav extends React.Component<any, { current: string }> {\n    constructor(args) {\n        super(args);\n        switch (this.props.location.pathname) {\n            case \"/create\":\n                this.state = {\n                    current: \"create_task\",\n                };\n                break;\n            case \"/subscribe\":\n                this.state = {\n                    current: \"goods_subscribe\",\n                };\n                break;\n            case \"/\":\n            default:\n                this.state = {\n                    current: \"task_list\",\n                };\n                break;\n        }\n    }\n\n    public handleClick(e) {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    public render() {\n        return (\n            <div>\n                <Menu\n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.current]}\n                    mode=\"horizontal\"\n                    theme=\"dark\"\n                >\n                    <Menu.Item key=\"task_list\">\n                        <Link to=\"/\"><Icon type=\"appstore\" />当前任务单</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"create_task\">\n                        <Link to=\"/create\"><Icon type=\"appstore\" />创建新任务单</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"goods_subscribe\">\n                        <Link to=\"/subscribe\"><Icon type=\"appstore\" />饰品监听</Link>\n                    </Menu.Item>\n                </Menu>\n                {/* <nav style={{ textAlign: \"center\", width: \"100vw\", margin: \"0 0 50px 0\" }}>\n                    <Link to=\"/\" style={{ margin: \"0 30px \" }}>当前任务单</Link>\n                    <Link to=\"/create\" style={{ margin: \"0 30px \" }}>创建新任务单</Link>\n                    <Link to=\"/subscribe\" style={{ margin: \"0 30px \" }}>饰品监听</Link>\n                </nav> */}\n            {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Nav;\n","import * as React from \"react\";\nimport { Button, Input, List, Card } from \"antd\";\nimport { autobind } from \"core-decorators\";\nimport Axios from \"axios\";\nimport { ISubscriber } from \"../../core/model\";\n\nconst getGameId = (gameName: string) => {\n    switch (gameName) {\n        case \"dota2\":\n            return \"570\";\n        case \"csgo\":\n            return \"730\";\n        case \"pubg\":\n            return \"578080\";\n        default:\n            return \"570\";\n    }\n};\n\n@autobind\nclass GoodsSubscribe extends React.Component<any, { gameName: string, marketHashName: string, intervals: number, verboseName: string, dataSource: ISubscriber[] }> {\n    constructor(args) {\n        super(args);\n        this.state = {\n            gameName: \"\",\n            marketHashName: \"\",\n            verboseName: \"\",\n            intervals: null,\n            dataSource: []\n        }\n    }\n\n    public componentDidMount() {\n        Axios.get(\"/api/subscribe\")\n            .then((res) => {\n                this.setState({\n                    dataSource: res.data\n                });\n            })\n    }\n\n    public handleValueChange(ev) {\n        const newState = {};\n        newState[ev.target.name] =  ev.target.value;\n        this.setState(newState);\n    }\n\n    public handleSubmit() {\n        const { gameName, marketHashName, intervals, verboseName } = this.state;\n        Axios.post(\"/api/subscribe\", {\n            gameName,\n            marketHashName,\n            intervals,\n            verboseName\n        })\n            .then(res => {\n                if (res.data.error === 0) {\n                    location.reload();\n                }\n            });\n    }\n\n    public handleDeleteSubscriber(id) {\n        Axios.delete(`/api/subscribe/${id}`)\n            .then(res => {\n                location.reload();\n            })\n    }\n\n    public render() {\n        const { dataSource: subscribers } = this.state;\n        \n        const totalSum = subscribers.filter(v => v.status === 1).reduce((pv, cv) => {\n            let nowPrice;\n            if (cv.medianPrice) {\n                nowPrice = Number(cv.medianPrice.replace(\",\", \"\").substr(2));\n            } else {\n                nowPrice = Number(cv.lowestPrice.replace(\",\", \"\").substr(2));\n            }\n            return pv + nowPrice;\n        }, 0)\n\n        return (\n            <section style={ { textAlign: \"center\" } }>\n                <br />\n                <form>\n                    <label>游戏名（请输入 dota2，csgo或者pubg）</label>\n                    <Input type=\"text\" onChange={this.handleValueChange} name=\"gameName\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>饰品唯一标识名称（见于导出报表的商品唯一标识名称列）</label>\n                    <Input type=\"text\" onChange={this.handleValueChange} name=\"marketHashName\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>简易名称（标志名称和饰品一一对应但为英文不方便，此为简易名称显示于监听列表）</label>\n                    <Input type=\"text\" onChange={this.handleValueChange} name=\"verboseName\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>每次抓取时间间隔（分钟）</label>\n                    <Input type=\"number\" onChange={this.handleValueChange} name=\"intervals\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <Button type=\"primary\" onClick={this.handleSubmit}>添加    ！</Button>\n                </form>\n                <br />\n                <hr />\n                <h3>监听饰品预估总价值：（按平均出售价计算）{totalSum.toFixed(2)}</h3>\n                <br /><br />\n                {subscribers && <List\n                    grid={{ gutter: 16, column: 4 }}\n                    dataSource={subscribers}\n                    renderItem={s => (\n                        <List.Item>\n                            <Card title={s.verboseName || s.marketHashName}>\n                                {(s.status === 1 || (s.status === 0 && s.lowestPrice)) ? (\n                                    <div>\n                                        <p><a href={`https://steamcommunity.com/market/listings/${getGameId(s.gameName)}/${encodeURI(s.marketHashName)}`} target=\"_blank\">Steam 市场链接</a></p>\n                                        <p>每次抓取间隔时间：{s.intervals}分钟</p>\n                                        <p>Steam最低价：{s.lowestPrice}</p>\n                                        <p>Steam平均出售价：{s.medianPrice || \"无\" }</p>\n                                        <p>Steam平台24小时出售个数：{s.volume || \"无\" }</p>\n                                        <p>最后更新时间：{new Date(s.updatedAt).toLocaleString()}</p>\n                                    </div>\n                                ) : (<p>{s.status === -1 ? \"正在抓取中\" : \"抓取失败\" }</p>)}\n                                <p><Button type=\"danger\" onClick={this.handleDeleteSubscriber.bind(null, s._id)}>删除该监听饰品</Button></p>\n                            </Card>\n                        </List.Item>\n                    )}\n                />}\n            </section>\n        )\n    }\n}\n\nexport default GoodsSubscribe;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport TaskCreate from \"./create\";\nimport TaskList from \"./list\";\nimport Nav from \"./nav\";\nimport GoodsSubscribe from \"./subscribe\";\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Nav>\n                <Route path=\"/\" exact={true}  component={TaskList} />\n                <Route path=\"/create\" component={TaskCreate} />\n                <Route path=\"/subscribe\" component={GoodsSubscribe} />\n            </Nav>\n        </Switch>\n    </HashRouter>,\n    document.getElementById(\"root\") as HTMLElement,\n    () => console.log(\"Page 服务已启动\"),\n);\n"],"sourceRoot":""}
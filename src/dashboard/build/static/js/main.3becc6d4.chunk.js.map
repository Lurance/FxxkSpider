{"version":3,"sources":["create.tsx","list.tsx","nav.tsx","subscribe.tsx","index.tsx"],"names":["TaskCreate","autobind","arg","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gameName","startPage","endPage","undefined","task","selectType","cb","_this2","sto","setTimeout","runPoll","_this3","_this$state","Axios","post","then","res","data","error","alert","props","history","push","ev","newState","target","name","value","setState","react","style","textAlign","onSubmit","handleSubmit","input","type","onChange","handleValueChange","width","es_button","onClick","React","TaskList","args","dataSource","progressString","get","nowTask","status","getTaskDetail","_id","clearTimeout","poll","taskId","_this4","concat","componentDidMount","location","reload","resultUrl","href","handleExport","bind","_this5","length","map","t","i","spin","spinning","delay","card","title","desc","hoverable","Date","createdAt","toLocaleTimeString","renderStatus","timeConsuming","renderResultUrl","Nav","Menu","SubMenu","ItemGroup","pathname","current","e","key","menu","handleClick","selectedKeys","mode","theme","Item","Link","to","icon","children","GoodsSubscribe","ReactDOM","HashRouter","Switch","nav","Route","path","exact","component","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.3becc6d4.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { autobind } from \"core-decorators\";\nimport Axios from \"axios\";\nimport { ITask } from \"../../core/model\";\nimport { Button, Input } from \"antd\";\n\n@autobind\nclass TaskCreate extends React.Component<any, { gameName: string, startPage: number, endPage: number, task: ITask, selectType: string }> {\n    public sto: any;\n    constructor(arg) {\n        super(arg);\n        this.state = {\n            gameName: \"\",\n            startPage: 1,\n            endPage: undefined,\n            task: null,\n            selectType: \"1\",\n        };\n    }\n\n    public runPoll(cb) {\n        this.sto = setTimeout(() => {\n            if (cb) {\n                cb();\n            }\n            this.runPoll(cb);\n        }, 1000);\n    }\n\n    // public getTaskDetail(taskId) {\n    //     return () => {\n    //         Axios.get<ITask>(`/api/task/${taskId}`)\n    //             .then((res) => {\n    //                 if (res.data.status === 1) {\n    //                     clearTimeout(this.sto);\n    //                     const task = res.data;\n    //                     this.setState({\n    //                         task,\n    //                     });\n    //                 }\n    //         });\n    //     };\n    // }\n\n    public handleSubmit() {\n        const { gameName, startPage, endPage } = this.state;\n        Axios.post(\"/api/task\", {\n            gameName,\n            startPage,\n            endPage,\n        })\n            .then((res) => {\n                if (res.data.error === 0) {\n                    alert(\"创建成功，请等待任务单运行\");\n                    this.props.history.push(\"/\");\n                }\n            });\n    }\n\n    public handleValueChange(ev) {\n        const newState = {};\n        newState[ev.target.name] =  ev.target.value;\n        this.setState(newState);\n    }\n\n    public render() {\n        return (\n            <section style={{ textAlign: \"center\" }}>\n                <br />\n                <form onSubmit={this.handleSubmit}>\n                    <label>游戏名：（请输入 dota2，csgo或者pubg）</label>\n                    <Input type=\"text\" onChange={this.handleValueChange} name=\"gameName\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>开始页数：（爬取开始的页数，一般为 1，平均一页1500条数据）</label>\n                    <Input type=\"number\" onChange={this.handleValueChange} name=\"startPage\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <label>结束页数：（爬取结束的页数，填-1为最后一页）</label>\n                    <Input type=\"number\" onChange={this.handleValueChange} name=\"endPage\" style={{ width: \"20%\" }}></Input>\n                    <br /><br />\n                    <Button type=\"primary\" onClick={this.handleSubmit}>开始    ！</Button>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default TaskCreate;\n","import * as React from \"react\";\nimport Axios from \"axios\";\nimport { ITask } from \"../../core/model\";\nimport { autobind } from \"core-decorators\";\nimport { Card, Button, Spin } from \"antd\";\n\n@autobind\nclass TaskList extends React.Component<{}, { dataSource: ITask[], progressString: string; }> {\n    public poll: NodeJS.Timer;\n\n    constructor(args) {\n        super(args);\n        this.state = {\n            dataSource: [],\n            progressString: \"\",\n        };\n    }\n\n    public componentDidMount() {\n        Axios.get(\"/api/task\")\n            .then((res) => {\n                const nowTask = res.data[0];\n                if (nowTask.status === -1) {\n                    this.runPoll(this.getTaskDetail(nowTask._id));\n                }\n                this.setState({ dataSource: res.data });\n            });\n    }\n\n    public componentWillUnmount() {\n        clearTimeout(this.poll);\n    }\n\n    public runPoll(cb) {\n        this.poll = setTimeout(() => {\n            if (cb) {\n                cb();\n            }\n            this.runPoll(cb);\n        }, 2000);\n    }\n\n    public getTaskDetail(taskId) {\n        return () => {\n            Axios.get<ITask>(`/api/task/${taskId}`)\n                .then((res) => {\n                    if (res.data.status === 1) {\n                        clearTimeout(this.poll);\n                        this.componentDidMount();\n                        // const nowTask = res.data;\n                        // this.setState((state) => ({ dataSource: state.dataSource.splice(0, 1, nowTask) }));\n                    }\n            });\n        };\n    }\n\n    public renderStatus(status) {\n        switch (status) {\n            case -1:\n                return \"运行中\";\n            case 0:\n                return \"运行失败\";\n            case 1:\n                return \"成功！\";\n        }\n    }\n\n    public handleExport(task: ITask) {\n        Axios.get(`/api/task/${task._id}/export`)\n            .then((res) => {\n                if (res.data.error === 0) {\n                    location.reload();\n                }\n            });\n    }\n\n    public renderResultUrl(task: ITask) {\n        if (task.status === 1) {\n            if (task.resultUrl) {\n                return <p>数据下载链接：<a href={`/${task.resultUrl}`}>{task.resultUrl}</a></p>;\n            } else {\n                return <p><Button type=\"primary\" onClick={this.handleExport.bind(this, task)}>导出数据</Button></p>;\n            }\n        }\n    }\n\n    public render() {\n        const { dataSource, progressString } = this.state;\n        return (\n            <section>\n                <br />\n                {dataSource.length > 0 ? dataSource.map((t, i) => (\n                    <section>\n                        <Spin spinning={t.status !== 1} delay={300}>\n                            <Card title={t.desc} hoverable={true}>\n                                <p>创建时间：{new Date(t.createdAt).toLocaleTimeString()}</p>\n                                <p>状态：{this.renderStatus(t.status)}{i === 0 ? progressString : null}</p>\n                                {t.status === 1 ? <p>耗时：{t.timeConsuming}</p> : null}\n                                {this.renderResultUrl(t)}\n                            </Card>\n                        </Spin>\n                        <br />\n                        <br />\n                    </section>\n                )) : \"还没有任务单或者任务单已经过期自动删除，点击右上方去创建！\"}\n            </section>\n        );\n    }\n}\n\nexport default TaskList;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon } from \"antd\";\nimport { autobind } from \"core-decorators\";\nimport * as H from \"history\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\n@autobind\nclass Nav extends React.Component<{ location?: H.Location }, { current: string }> {\n    constructor(args) {\n        super(args);\n        switch (this.props.location.pathname) {\n            case \"/create\":\n                this.state = {\n                    current: \"create_task\",\n                };\n                break;\n            case \"/subscribe\":\n                this.state = {\n                    current: \"goods_subscribe\",\n                };\n                break;\n            case \"/\":\n            default:\n                this.state = {\n                    current: \"task_list\",\n                };\n                break;\n        }\n    }\n\n    public handleClick(e) {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    public render() {\n        return (\n            <div>\n                <Menu\n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.current]}\n                    mode=\"horizontal\"\n                    theme=\"dark\"\n                >\n                    <Menu.Item key=\"task_list\">\n                        <Link to=\"/\"><Icon type=\"appstore\" />当前任务单</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"create_task\">\n                        <Link to=\"/create\"><Icon type=\"appstore\" />创建新任务单</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"goods_subscribe\">\n                        <Link to=\"/subscribe\"><Icon type=\"appstore\" />饰品监听</Link>\n                    </Menu.Item>\n                </Menu>\n                {/* <nav style={{ textAlign: \"center\", width: \"100vw\", margin: \"0 0 50px 0\" }}>\n                    <Link to=\"/\" style={{ margin: \"0 30px \" }}>当前任务单</Link>\n                    <Link to=\"/create\" style={{ margin: \"0 30px \" }}>创建新任务单</Link>\n                    <Link to=\"/subscribe\" style={{ margin: \"0 30px \" }}>饰品监听</Link>\n                </nav> */}\n            {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Nav;\n","import * as React from \"react\";\n\nclass GoodsSubscribe extends React.Component {\n    public render() {\n        return \"开发中！\";\n    }\n}\n\nexport default GoodsSubscribe;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport TaskCreate from \"./create\";\nimport TaskList from \"./list\";\nimport Nav from \"./nav\";\nimport GoodsSubscribe from \"./subscribe\";\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Nav>\n                <Route path=\"/\" exact={true}  component={TaskList} />\n                <Route path=\"/create\" component={TaskCreate} />\n                <Route path=\"/subscribe\" component={GoodsSubscribe} />\n            </Nav>\n        </Switch>\n    </HashRouter>,\n    document.getElementById(\"root\") as HTMLElement,\n    () => console.log(\"Page 服务已启动\"),\n);\n"],"sourceRoot":""}